{"version":3,"sources":["ng://hmctsroles-lib/lib/hmctsroles-lib.service.ts","ng://hmctsroles-lib/lib/directives/roles.directive.ts","ng://hmctsroles-lib/lib/directives/unless-role-includes.directive.ts","ng://hmctsroles-lib/lib/hmctsroles-lib.module.ts"],"names":["HmctsrolesLibService","Injectable","args","providedIn","RolesDirective","viewContainerRef","templateRef","this","isVisible","Object","defineProperty","prototype","value","_roleAccess","console","log","_roleList","_roleSource","ngOnInit","roles","checkRoleisValid","createEmbeddedView","clear","_this","some","r","includes","Directive","selector","ViewContainerRef","TemplateRef","Input","UnlessRoleIncludesDirective","elr","authorised","roleList","split","nativeElement","style","visibility","unlessRole","ElementRef","HmctsrolesLibModule","NgModule","imports","declarations","exports"],"mappings":"0QAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCOAC,EAAA,WAmCE,SAAAA,EACUC,EACAC,GADAC,KAAAF,iBAAAA,EACAE,KAAAD,YAAAA,EALVC,KAAAC,WAAY,EA4Bd,OApDEC,OAAAC,eACIN,EAAAO,UAAA,aAAU,KADd,SACeC,GACbL,KAAKM,YAAcD,EACnBE,QAAQC,IAAI,eAAgBH,oCAK9BH,OAAAC,eACIN,EAAAO,UAAA,qBAAkB,KADtB,SACuBC,GACrBL,KAAKS,UAAYJ,EACjBE,QAAQC,IAAI,aAAcH,oCAM5BH,OAAAC,eACIN,EAAAO,UAAA,uBAAoB,KADxB,SACyBC,GACvBL,KAAKU,YAAcL,EACnBE,QAAQC,IAAI,eAAgBH,oCAa9BR,EAAAO,UAAAO,SAAA,WAGEX,KAAKY,MAAQZ,KAAKS,UAELT,KAAKa,mBAGhBb,KAAKF,iBAAiBgB,mBAAmBd,KAAKD,aAG9CC,KAAKF,iBAAiBiB,SAK1BlB,EAAAO,UAAAS,iBAAA,WAAA,IAAAG,EAAAhB,KACE,OAAOA,KAAKY,MAAMK,KAAI,SAACC,GAAK,OAAAF,EAAKV,YAAYa,SAASD,0BA1DzDE,EAAAA,UAASzB,KAAA,CAAC,CACT0B,SAAU,4DARQC,EAAAA,wBAAkBC,EAAAA,mDAenCC,EAAAA,kCAQAA,EAAAA,oCASAA,EAAAA,SAmCH3B,EA5DA,GCHA4B,EAAA,WAUE,SAAAA,EACUC,GAAA1B,KAAA0B,IAAAA,EAwBZ,OArBED,EAAArB,UAAAO,SAAA,eAEMgB,EACJ3B,KAAKY,MAAQZ,KAAK4B,SAASC,MAAM,KAEjCF,EAAa3B,KAAKa,mBAGhBb,KAAK0B,IAAII,cAAcC,MAAMC,WAD3BL,EACwC,SAGA,WAM9CF,EAAArB,UAAAS,iBAAA,WAAA,IAAAG,EAAAhB,KACE,OAAOA,KAAKY,MAAMK,KAAI,SAACC,GAAK,OAAAF,EAAKiB,WAAWJ,MAAM,KAAKV,SAASD,0BAhCnEE,EAAAA,UAASzB,KAAA,CAAC,CACT0B,SAAU,4DALQa,EAAAA,kDASjBV,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,SA4BHC,EAnCA,GCJAU,EAAA,WAIA,SAAAA,KAKmC,2BALlCC,EAAAA,SAAQzC,KAAA,CAAC,CACR0C,QAAS,GACTC,aAAc,CAACzC,EAAgB4B,GAC/Bc,QAAS,CAAC1C,EAAgB4B,OAEOU,EATnC","sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HmctsrolesLibService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef, TemplateRef, Input, OnInit } from \"@angular/core\";\r\n\r\n//import { HmctsrolesLibService } from \"../hmctsroles-lib.service\";\r\n\r\n\r\n\r\n\r\n@Directive({\r\n  selector: \"[roleAccess]\"\r\n})\r\nexport class RolesDirective implements OnInit {\r\n  // @Input() roleAccess: string;\r\n  // @Input() roleAccessroleList: string;\r\n\r\n  private _roleAccess: string;\r\n  @Input()\r\n  set roleAccess(value: string) {\r\n    this._roleAccess = value;\r\n    console.log('roleAccess: ', value);\r\n  }\r\n\r\n\r\n  private _roleList: string[];\r\n  @Input()\r\n  set roleAccessRoleList(value: string[]) {\r\n    this._roleList = value;\r\n    console.log('roleList: ', value);\r\n  }\r\n\r\n\r\n\r\n  private _roleSource: string;\r\n  @Input()\r\n  set roleAccessRoleSource(value: string) {\r\n    this._roleSource = value;\r\n    console.log('roleSource: ', value);\r\n  }\r\n\r\n\r\n  isVisible = false;\r\n  roles: any[];\r\n\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    // private auth: HmctsrolesLibService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let authorised\r\n\r\n    this.roles = this._roleList;\r\n\r\n    authorised = this.checkRoleisValid()\r\n\r\n    if (authorised)\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef)\r\n\r\n    else\r\n      this.viewContainerRef.clear()\r\n\r\n  }\r\n\r\n\r\n  checkRoleisValid() {\r\n    return this.roles.some(r => this._roleAccess.includes(r))\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, ViewContainerRef, TemplateRef } from '@angular/core';\r\n//import { HmctsrolesLibService } from '../hmctsroles-lib.service';\r\n\r\n\r\n@Directive({\r\n  selector: \"[unlessRole]\"\r\n})\r\nexport class UnlessRoleIncludesDirective implements OnInit {\r\n\r\n  @Input() unlessRole: string;\r\n  @Input() roleList: string;\r\n  @Input() roleSource: string;\r\n  roles: any;\r\n\r\n  constructor(\r\n    private elr: ElementRef) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    let authorised\r\n    this.roles = this.roleList.split(',')\r\n\r\n    authorised = this.checkRoleisValid()\r\n\r\n    if (authorised)\r\n      this.elr.nativeElement.style.visibility = 'hidden'\r\n\r\n    else\r\n      this.elr.nativeElement.style.visibility = 'visible'\r\n\r\n  }\r\n\r\n\r\n\r\n  checkRoleisValid() {\r\n    return this.roles.some(r => this.unlessRole.split(',').includes(r))\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RolesDirective } from './directives/roles.directive';\r\nimport { UnlessRoleIncludesDirective } from './directives/unless-role-includes.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [RolesDirective, UnlessRoleIncludesDirective],\r\n  exports: [RolesDirective, UnlessRoleIncludesDirective]\r\n})\r\nexport class HmctsrolesLibModule { }\r\n"]}